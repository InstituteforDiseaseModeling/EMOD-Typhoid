# -*- mode: python; -*-
# This Python script, SConscript, invoked by the SConscript in the upper directory,
#
# 1. builds utils static library
import os
from subprocess import Popen, PIPE

Import("env")
if os.sys.platform != 'win32':
    git_sha_handle = Popen( "git rev-list HEAD --count".split(), stdout=PIPE )
    sha1 = git_sha_handle .stdout.read().rstrip()
    SHA1STR = "-DREVISION_NUMBER='" + str(sha1) + "'"
    env.Append( CCFLAGS=[ SHA1STR ] )

else:
    root = Dir('#').abspath
    version_info = '{0}\\scripts\\gitversion.cmd {0}\\utils'.format(root)
    print("Executing '{0}'".format(version_info))
    os.system(version_info)

utilsSrcFiles = [
    "BinaryArchiveReader.cpp",
    "BinaryArchiveWriter.cpp",
    "Configuration.cpp",
    "Configure.cpp",
    "Coredump.cpp",
    "DurationDistribution.cpp",
    "Environment.cpp",
    "Exceptions.cpp",
    "FileSystem.cpp",
    "IArchive.cpp",
    "IdmDateTime.cpp",
    "IdmMpi.cpp",
    "InterpolatedValueMap.cpp",
    "ISerializable.cpp",
    "ISupports.cpp",
    "JsonFullReader.cpp",
    "JsonFullWriter.cpp",
    "JsonObject.cpp",
    "JsonRawReader.cpp",
    "JsonRawWriter.cpp",
    "Log.cpp",
    "MathFunctions.cpp",
    "../rapidjson/modp/modp_numtoa.cpp",
    "ProgramOptions.cpp",
    "ProgVersion.cpp",
    "RANDOM.cpp",
    "RapidJsonImpl.cpp",
    "Serializer.cpp",
    "Sigmoid.cpp",
    "StatusReporter.cpp",
    "stdafx.cpp",
    "suids.cpp",
    "Types.cpp",
    "ValidationLog.cpp"
]

utilsIncFiles = [
    'BoostLibWrapper.h',
    'Configuration.h',
    'ConfigurationImpl.h',
    'Configure.h',
    'EnumSupport.h',
    'Environment.h',
    'FactorySupport.h',
    "InterpolatedValueMap.h",
    'ISupports.h',
    'Log.h',
    'MathFunctions.h',
    'Profile.h',
    'ProgVersion.h',
    'SimpleTypemapRegistration.h',
    "StatusReporter.h",
    'Sugar.h',
    'ValidationLog.h',
    'version_info.h'
]

utilsLocalInc = ['stdafx.h']

utilsLib = env.StaticLibrary('utils', utilsSrcFiles)

msvc = GetOption( "MSVC" )
if msvc is not None and msvc != False and msvc != "":

    bvar = env['BUILD_VARIANT'] + '|x64'
    print "Utils: Generating MSVS" + env['MSVS_VERSION'] + " project files for '%s'" % bvar
    
    env.MSVSProject(target = 'UtilsScons' + env['MSVSPROJECTSUFFIX'],
		srcs = utilsSrcFiles,
		incs = utilsIncFiles,
		localincs = utilsLocalInc,
		buildtarget = utilsLib,
                auto_build_solution = 0,
                variant = bvar)
