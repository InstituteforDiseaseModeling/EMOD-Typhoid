# -*- mode: python; -*-
# This Python script, SConscript, invoked by the SConscript in the upper directory,
#
# 1. builds libmalaria.dll to handle malaria disease based on libgeneric_static.lib and libvector_static.lib

Import('env')

stdobj = env.Object("stdafx.cpp")

libstibarrierdllSrcFiles = [ "../../interventions/STIBarrier.cpp",
                         "../../interventions/STIBarrierEModule.cpp"
                         ]

libstibarrierdllIncFiles = [  "../../interventions/stibarrier.h" ]
libstibarrierdllLocalInc = [  "stdafx.h" ]

stibarrierenv = env.Clone()
stibarrierenv.Append(LIBS=['libgeneric_static'])
stibarrierenv.Append(LIBPATH=['$BUILD_DIR/libgeneric_static'])
stibarrierenv.Append(LIBPATH=['$BUILD_DIR/libgeneric'])

libstibarrierDll = stibarrierenv.SharedLibrary('libstibarrier', libstibarrierdllSrcFiles + stdobj)
#print "building libstibarrierdll: " + str(libstibarrierdll)

# take libstibarrier.dll (exclude .lib, .exp) out to be the building target
# to match the number of building variant
libstibarrierdllTarget = libstibarrierDll[0]

msvc = GetOption( "MSVC" )
if msvc is not None and msvc != False and msvc != "":

    bvar = stibarrierenv['BUILD_VARIANT'] + '|x64'
    print str(libstibarrierdllTarget) + ": Generating MSVS" + stibarrierenv['MSVS_VERSION'] + " project files for '%s'" % bvar
    
    stibarrierenv.MSVSProject(target = 'LibstibarrierdllScons' + stibarrierenv['MSVSPROJECTSUFFIX'],
                    srcs = libstibarrierdllSrcFiles,
		    incs = libstibarrierdllIncFiles,
		    localincs = libstibarrierdllLocalInc,
 		    buildtarget = libstibarrierdllTarget,
                    auto_build_solution = 0,
                    variant = bvar)
